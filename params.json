{"name":"Season","tagline":"CSON Node Module","body":"# season - CSON Node module [![Build Status](https://travis-ci.org/atom/season.png)](https://travis-ci.org/atom/season)\r\n\r\nRead and write CSON/JSON files seamlessly.\r\n\r\n## Installing\r\n\r\n```sh\r\nnpm install season\r\n```\r\n\r\n## Building\r\n  * Clone the repository\r\n  * Run `npm install`\r\n  * Run `grunt` to compile the CoffeeScript code\r\n  * Run `grunt test` to run the specs\r\n\r\n## Compiling CSON to JSON\r\n\r\nThis module comes with a `csonc` executable that allows you to compile a CSON\r\nfile to JSON.\r\n\r\nTo use:\r\n\r\n```sh\r\nnpm install -g season\r\necho \"this: 'is cson'\" > file.cson\r\ncsonc file.cson file.json\r\ncat file.json\r\n{\r\n  \"this\": \"is cson\"\r\n}\r\n```\r\n\r\n## Docs\r\n\r\n```coffeescript\r\nCSON = require 'season'\r\n```\r\n\r\n### CSON.stringify(object)\r\n\r\nConvert the object to a CSON string.\r\n\r\n`object` - The object to convert to CSON.\r\n\r\nReturns the CSON string representation of the given object.\r\n\r\n### CSON.readFile(objectPath, callback)\r\n\r\nRead the CSON or JSON object at the given path and return it to the callback\r\nonce it is read and parsed.\r\n\r\n`objectPath` - The string path to a JSON or CSON object file.\r\n\r\n`callback` - The function to call with the error or object once the path\r\n             is read and parsed.\r\n\r\n### CSON.readFileSync(objectPath, object)\r\n\r\nSynchronous version of `CSON.readFile(objectPath, callback)`\r\n\r\n### CSON.writeFile(objectPath, object, callback)\r\n\r\nWrite the object to the given path as either JSON or CSON depending on the\r\npath's extension.\r\n\r\n`objectPath` - The string path to a JSON or CSON object file.\r\n\r\n`object` - The object to convert to a string and write to the path.\r\n\r\n`callback` - The function to with an error object on failures.\r\n\r\n### CSON.writeFileSync(objectPath, object)\r\n\r\nSynchronous version of `CSON.writeFile(objectPath, object, callback)`\r\n\r\n### CSON.isObjectPath(objectPath)\r\n\r\nIs the given path a valid object path?\r\n\r\nReturns `true` if the path has a `.json` or `.cson` file extension, `false`\r\notherwise.\r\n\r\n### CSON.resolve(objectPath)\r\n\r\nResolve the path to an existent file that has a `.json` or `.cson` extension.\r\n\r\n`objectPath` - The string path to a JSON or CSON object file with or without\r\n               an extension.\r\n\r\nReturns the path to an existent CSON or JSON file or `null` if none found.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}